<View id="1" did="0" type="LinearLayout">
<ppt>width=-1
height=45dp
orientation=horizontal
background=#aaaaaaaa</ppt>
<event></event>
</View>
<View id="2" did="1" type="ImageView">
<ppt>width=45dp
height=45dp
src=@Gui/icon.png
padding=2dp</ppt>
<event></event>
</View>
<View id="3" did="1" type="TextView">
<ppt>width=-1
height=-1
text=Hyper Furball 窗口启动器
textSize=18dp
textColor=#ffffff
gravity=center_vertical
paddingLeft=5dp</ppt>
<event></event>
</View>
<View id="9" did="0" type="LinearLayout">
<ppt>width=-1
height=-2
orientation=horizontal</ppt>
<event></event>
</View>
<View id="8" did="9" type="TextView">
<ppt>width=320dp
height=-2
text=X:0 Y:0 W:0 H:0 透明度:100 缩放:100 比例:100</ppt>
<event></event>
</View>
<View id="4" did="9" type="TextView">
<ppt>width=-1
height=-2
text=状态:未启动
gravity=left</ppt>
<event></event>
</View>
<View id="11" did="0" type="LinearLayout">
<ppt>width=-2
height=-2
orientation=horizontal</ppt>
<event></event>
</View>
<View id="5" did="11" type="Button">
<ppt>width=-2
height=-2
text=启动</ppt>
<event><eventItme type="clicki">f(sss.悬浮窗状态 != true)
{
zdp(1,px)
s(px*50,sss.悬浮窗xxx)
//s(sss.悬浮窗xxx+85,sss.悬浮窗交互组件xxx)
sss 悬浮窗yyy = sss.悬浮窗xxx
s(px*35,px2)
s(px2+602,hhh)
//关闭已有窗口
//uxf(sss.悬浮窗,"del")
//创建新窗口
uxf("悬浮窗.iyu",sss.悬浮窗xxx,sss.悬浮窗yyy,-2,-2,0,"top|left",0,0,sss.悬浮窗)
uxf("悬浮窗交互组件.iyu",sss.悬浮窗xxx,sss.悬浮窗yyy,-2,-2,0,"top|left",0,0,sss.悬浮窗交互组件)
us(4,"text","状态:正在运行")
us(5,"text","关闭")
//隐藏交互组件布局
gvs(sss.悬浮窗交互组件,悬浮窗交互组件.1,ss.悬浮窗交互控件1)
gvs(sss.悬浮窗交互组件,悬浮窗交互组件.7,ss.悬浮窗交互控件7)
dhas(dh,ss.悬浮窗交互控件1, "alpha",0,0)
dh(dh, "duration",1)
dh(dh, "start")
dhas(dh1,ss.悬浮窗交互控件7, "alpha",0,0)
dh(dh1, "duration",1)
dh(dh1, "start")

sss 悬浮窗状态 = true
}

else f(sss.悬浮窗状态 == true)
{
  us(4,"text","状态:已关闭窗口")
  us(5,"text","启动")
  uxf(sss.悬浮窗,"del")
  uxf(sss.悬浮窗交互组件,"del")
  us(12,"text","显示交互组件布局")
  sss 悬浮窗交互组件状态 = false
  sss 悬浮窗状态 = false
}

//by:yuhang0000</eventItme></event>
</View>
<View id="12" did="11" type="Button">
<ppt>width=-2
height=-2
text=显示交互组件布局</ppt>
<event><eventItme type="clicki">gvs(sss.悬浮窗交互组件,悬浮窗交互组件.1,ss.悬浮窗交互控件1)
gvs(sss.悬浮窗交互组件,悬浮窗交互组件.7,ss.悬浮窗交互控件7)
f(sss.悬浮窗交互组件状态 != true)
{
us(12,"text","隐藏交互组件布局")
dhas(dh,ss.悬浮窗交互控件1, "alpha",0,1)
dh(dh, "duration",200)
dh(dh, "start")
dhas(dh1,ss.悬浮窗交互控件7, "alpha",0,1)
dh(dh1, "duration",1)
dh(dh1, "start")
sss 悬浮窗交互组件状态 = true
}

else f(sss.悬浮窗交互组件状态 == true)
{
us(12,"text","显示交互组件布局")
dhas(dh,ss.悬浮窗交互控件1, "alpha",1,0)
dh(dh, "duration",200)
dh(dh, "start")
dhas(dh1,ss.悬浮窗交互控件7, "alpha",1,0)
dh(dh1, "duration",1)
dh(dh1, "start")
sss 悬浮窗交互组件状态 = false
}
</eventItme></event>
</View>
<View id="7" did="0" type="TextView">
<ppt>width=-2
height=-2
text=日志:</ppt>
<event></event>
</View>
<View id="6" did="0" type="ScrollView">
<ppt>width=-1
height=-1
background=#dddddd</ppt>
<event></event>
</View>
<View id="10" did="6" type="TextView">
<ppt>width=-1
height=-1
text=¯\_(ツ)_/¯</ppt>
<event></event>
</View>
<UIEventset><eventItme type="loading">//初始化
lan(0)
ss("Hyper Furballl 窗口启动器 ver:"+sss.版本,title)
us(3,"text",title)

f(sss.屏幕pxw == null)
{
  //ushsp(false)
  //swh("pxw",sss.屏幕pxw)
  //swh("pxbvk",sss.屏幕pxztl)
  //swh("pxh",sss.屏幕pxh)
  //s(sss.屏幕pxh+sss.屏幕pxztl-2000,sss.屏幕hhh)
  //s(sss.屏幕pxw-2000,sss.屏幕www)
}


/.
t()
{
  w(ss.退出 != true)
  {
    ss 悬浮窗要不要85 = sss.屏幕www
    f(ss.退出 == true)
    {
      endcode
    }
    stop(200)
  }
}
./


/.
t()
{
  w(ss.退出 != true)
  {
    swh("pxw",pxw)
    f(sss.屏幕pxw == pxw)
    {
      //竖屏状态
      ss 悬浮窗要不要85 = sss.屏幕hhh
    }
    else
    {
      //横屏状态
      ss 悬浮窗要不要85 = sss.屏幕www
      /.
      zdp(1,px)
      s(px*50,sss.悬浮窗xxx)
      ufnsui()
      {
      uxf(sss.悬浮窗交互组件,"set",sss.悬浮窗xxx,sss.悬浮窗xxx,-2,-2,"top|left")
      uxf(sss.悬浮窗,"set",sss.悬浮窗xxx,sss.悬浮窗xxx,-2,-2,"top|left")
      }
      f(ss.悬浮窗重力x轴 &lt; -2)
      {
        ss 悬浮窗要不要85 = sss.屏幕www
      }
      else
      {
        ss 悬浮窗要不要85 = sss.屏幕www
      }
      
    }
    f(ss.退出 == true)
    {
      endcode
    }
    stop(200)
  }
}</eventItme><eventItme type="destroy">uxf(sss.悬浮窗,"del")
uxf(sss.悬浮窗交互组件,"del")
ss 退出 = true
us(4,"text","状态:已关闭窗口")</eventItme><eventItme type="downkey">syso("退出")</eventItme><eventItme type="upkey">f(st_kC == 4 && ss.退出 != true)
{
  ss 退出 = true
  t()
  {
    stop(250)
    end()
  }
}</eventItme><eventItme type="sensor">//ss 悬浮窗重力x轴 = st_x</eventItme></UIEventset>